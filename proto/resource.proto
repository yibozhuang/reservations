syntax = "proto3";

package reservations;

service Resources {
    rpc ListResourceTypes(ListResourceTypesRequest) returns (stream ResourceType);
    rpc RegisterResourceType(ResourceType) returns (ResourceTypeResponse);
    rpc DeleteResourceType(ResourceType) returns (ResourceTypeResponse);

    rpc AddResource(AddResourceRequest) returns (ResourceOperationResponse);
    rpc DeleteResource(DeleteResourceRequest) returns (ResourceOperationResponse);
    rpc ListResources(ListResourcesRequest) returns (stream Resource);
    rpc GetResource(GetResourcesRequest) returns (Resource);
}

// ListResourceTypesRequest intentionally left empty.
message ListResourceTypesRequest {}

// Request input to register a new type of resource.
message RegisterResourceTypeRequest {
    string name = 1;
}

// Response to operations on ResourceType.
message ResourceTypeResponse {
    optional ResourceType resource_type = 1;
    bool success = 2; 
}

// Request with optional filter input to retrieve a list of resources.
message ListResourcesRequest {
    optional ResourceType resource_type = 1;
}

// Request body for obtaining specific details of a resource.
message GetResourcesRequest {
    string resource_id = 1;
}

// Response to a single operation on resource.
message ResourceResponse {
    optional Resource resource = 1;
    bool success = 2; 
}

// Response to one of more operations on resources.
message ResourceOperationResponse {
    repeated ResourceResponse resources = 1;
}

// Request body to add one more resources.
message AddResourceRequest {
    repeated Resource resources = 1;
}

// Request body to delete one or more resources.
message DeleteResourceRequest {
    repeated string resource_id = 1;
}

// The type of the resource - identified by its name and id.
message ResourceType {
    optional string id = 1;
    string name = 2;
}

// A single abstract instance.
//
// The instance is the lowest unit of a generic resource.
message Unit {
    optional string id = 1;
    int32 horizontal_index = 2;
    int32 vertical_index = 3;
}

// The dimension of a particular resource.
message Dimension {
    int32 length = 1;
    int32 width = 2;
}

// A resource is composed of one or more instances.
//
// A resource is an identification of a standalone instance that a reservation can target.
message Resource {
    optional string id = 1;
    string name = 2;
    ResourceType type = 3;
    Dimension dimension  = 4;
    repeated Unit units = 5;
}