syntax = "proto3";

package reservations;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service ReservationService {
  // List available time slots within a date range
  rpc ListAvailableSlots(TimeRange) returns (SlotList);
  
  // Create a new reservation
  rpc CreateReservation(ReservationRequest) returns (Reservation);
  
  // Get a specific reservation by ID
  rpc GetReservation(ReservationId) returns (Reservation);
  
  // Cancel an existing reservation
  rpc CancelReservation(ReservationId) returns (google.protobuf.Empty);
  
  // List all reservations for a client
  rpc ListClientReservations(ClientId) returns (ReservationList);

  // Create a new client
  rpc CreateClient(ClientRequest) returns (Client);

  // List all clients
  rpc ListClients(google.protobuf.Empty) returns (ClientList);
}

message TimeRange {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
}

message TimeSlot {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
}

message SlotList {
  repeated TimeSlot slots = 1;
}

message ReservationRequest {
  string client_id = 1;
  TimeSlot slot = 2;
  string notes = 3;
}

message ReservationId {
  string id = 1;
}

message ClientId {
  string id = 1;
}

message ClientRequest {
  string name = 1;
  string email = 2;
}

message Client {
  string id = 1;
  string name = 2;
  string email = 3;
  google.protobuf.Timestamp created_at = 4;
}

message ClientList {
  repeated Client clients = 1;
}

message Reservation {
  string id = 1;
  string client_id = 2;
  TimeSlot slot = 3;
  google.protobuf.Timestamp created_at = 4; 
  string status = 5; // "confirmed", "cancelled"
  string notes = 6;
}

message ReservationList {
  repeated Reservation reservations = 1;
}